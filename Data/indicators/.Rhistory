for(k in 1:length(data2[[i]][,1])){for(l in 1:length(data2[[i]][1,])){if(is.na(data2[[i]][k,l])){data2[[i]][k,l]=0};}}
if(tQ2[i]){data2[[i]]=t(data2[[i]])}
}
robustnessRatio = function(indics1,indics2){
d1 = c()
for(i in indics1){
show(dataFilesQ1[i]);
d1 = append(discrepancyCriteria(data1[[i]],type=c('L2'))$DisL2,d1);
}
d2 = c()
for(i in indics2){
show(dataFilesQ2[i])
d2 = append(discrepancyCriteria(data2[[i]],type=c('L2'))$DisL2,d2)}
return(sum(w1*d1)/sum(w2*d2))
}
#Caluclation Total
robustnessRatio(1:5,1:5)
robustnessRatio(1:1,1:1)
robustnessRatio = function(indics1,indics2){
d1 = c()
for(i in indics1){
show(dataFilesQ1[i]);
#d1 = append(discrepancyCriteria(data1[[i]],type=c('L2'))$DisL2,d1);
d1 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d1);
}
d2 = c()
for(i in indics2){
show(dataFilesQ2[i])
#d2 = append(discrepancyCriteria(data2[[i]],type=c('L2'))$DisL2,d2)}
d2 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d2);
return(sum(w1*d1)/sum(w2*d2))
}
#Caluclation Total
robustnessRatio(1:1,1:1)
robustnessRatio = function(indics1,indics2){
d1 = c()
for(i in indics1){
show(dataFilesQ1[i]);
#d1 = append(discrepancyCriteria(data1[[i]],type=c('L2'))$DisL2,d1);
d1 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5)),type=c('L2'))$DisL2,d1);
}
d2 = c()
for(i in indics2){
show(dataFilesQ2[i])
#d2 = append(discrepancyCriteria(data2[[i]],type=c('L2'))$DisL2,d2)}
d2 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5)),type=c('L2'))$DisL2,d2);
return(sum(w1*d1)/sum(w2*d2))
}
#Caluclation Total
robustnessRatio(1:1,1:1)
robustnessRatio = function(indics1,indics2){
d1 = c()
for(i in indics1){
show(dataFilesQ1[i]);
#d1 = append(discrepancyCriteria(data1[[i]],type=c('L2'))$DisL2,d1);
d1 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d1);
}
d2 = c()
for(i in indics2){
show(dataFilesQ2[i])
#d2 = append(discrepancyCriteria(data2[[i]],type=c('L2'))$DisL2,d2)}
d2 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d2);
return(sum(w1*d1)/sum(w2*d2))
}
robustnessRatio = function(indics1,indics2){
d1 = c()
for(i in indics1){
show(dataFilesQ1[i]);
#d1 = append(discrepancyCriteria(data1[[i]],type=c('L2'))$DisL2,d1);
d1 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d1);
}
d2 = c()
for(i in indics2){
show(dataFilesQ2[i])
#d2 = append(discrepancyCriteria(data2[[i]],type=c('L2'))$DisL2,d2)}
d2 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d2);
}
return(sum(w1*d1)/sum(w2*d2))
}
robustnessRatio(1:1,1:1)
robustnessRatio = function(indics1,indics2){
d1 = c()
for(i in indics1){
show(dataFilesQ1[i]);
d1 = append(discrepancyCriteria(data1[[i]],type=c('L2'))$DisL2,d1);
#d1 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d1);
show(d1)
}
d2 = c()
for(i in indics2){
show(dataFilesQ2[i])
#d2 = append(discrepancyCriteria(data2[[i]],type=c('L2'))$DisL2,d2)}
d2 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d2);
show(d2);
}
return(sum(w1*d1)/sum(w2*d2))
}
robustnessRatio = function(indics1,indics2){
d1 = c()
for(i in indics1){
show(dataFilesQ1[i]);
d1 = append(discrepancyCriteria(data1[[i]],type=c('L2'))$DisL2,d1);
#d1 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d1);
show(d1)
}
d2 = c()
for(i in indics2){
show(dataFilesQ2[i])
d2 = append(discrepancyCriteria(data2[[i]],type=c('L2'))$DisL2,d2)}
#d2 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d2);
show(d2);
}
return(sum(w1*d1)/sum(w2*d2))
}
#Caluclation Total
robustnessRatio(1:1,1:1)
data2[[1]]
discrepancyCriteria(data2[[1]],type=c('L2'))$DisL2
robustnessRatio(1:3,1:3)
robustnessRatio(3:5,3:5)
robustnessRatio = function(indics1,indics2){
d1 = c()
for(i in indics1){
show(dataFilesQ1[i]);
d1 = append(discrepancyCriteria(data1[[i]],type=c('L2'))$DisL2,d1);
#d1 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d1);
show(d1)
}
d2 = c()
for(i in indics2){
show(dataFilesQ2[i])
d2 = append(discrepancyCriteria(data2[[i]],type=c('L2'))$DisL2,d2)}
#d2 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d2);
show(d2);
}
return(sum(w1[indics1]*d1)/sum(w2[indics2]*d2))
}
#Caluclation Total
r = robustnessRatio(3:4,3:4)
r
d1
robustnessRatio = function(indics1,indics2){
d1 = c()
for(i in indics1){
show(dataFilesQ1[i]);
d=discrepancyCriteria(data1[[i]],type=c('L2'))$DisL2;
if(is.na(d)){d=0}
d1 = append(d,d1);
#d1 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d1);
show(d1)
}
d2 = c()
for(i in indics2){
show(dataFilesQ2[i])
d=discrepancyCriteria(data2[[i]],type=c('L2'))$DisL2;
if(is.na(d)){d=0}
d2 = append(d,d2)}
#d2 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d2);
show(d2);
}
return(sum(w1[indics1]*d1)/sum(w2[indics2]*d2))
}
robustnessRatio = function(indics1,indics2){
d1 = c()
for(i in indics1){
show(dataFilesQ1[i]);
d=discrepancyCriteria(data1[[i]],type=c('L2'))$DisL2;
if(is.na(d)){d=0}
d1 = append(d,d1);
#d1 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d1);
show(d1)
}
d2 = c()
for(i in indics2){
show(dataFilesQ2[i])
d=discrepancyCriteria(data2[[i]],type=c('L2'))$DisL2;
if(is.na(d)){d=0}
d2 = append(d,d2)
#d2 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d2);
show(d2);
}
return(sum(w1[indics1]*d1)/sum(w2[indics2]*d2))
}
r = robustnessRatio(3:3,3:3)
r
w1
w1[3:3]
w1[3:3,]
robustnessRatio = function(indics1,indics2){
d1 = c()
for(i in indics1){
show(dataFilesQ1[i]);
d=discrepancyCriteria(data1[[i]],type=c('L2'))$DisL2;
if(is.na(d)){d=0}
d1 = append(d,d1);
#d1 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d1);
show(d1)
}
d2 = c()
for(i in indics2){
show(dataFilesQ2[i])
d=discrepancyCriteria(data2[[i]],type=c('L2'))$DisL2;
if(is.na(d)){d=0}
d2 = append(d,d2)
#d2 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d2);
show(d2);
}
return(sum(w1[indics1,]*d1)/sum(w2[indics2,]*d2))
}
#Caluclation Total
r = robustnessRatio(3:3,3:3)
r
w1[3:3,]
w2[3:3,]
robustnessRatio = function(indics1,indics2){
d1 = c()
for(i in indics1){
show(dataFilesQ1[i]);
d=discrepancyCriteria(data1[[i]],type=c('L2'))$DisL2;
if(is.na(d)){d=0}
d1 = append(d,d1);
#d1 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d1);
show(d1)
}
d2 = c()
for(i in indics2){
show(dataFilesQ2[i])
d=discrepancyCriteria(data2[[i]],type=c('L2'))$DisL2;
if(is.na(d)){d=0}
d2 = append(d,d2)
#d2 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d2);
show(d2);
}
return(sum(w1[indics1,]*d1)/sum(w2[indics2,]*d2))
}
#Caluclation Total
r = robustnessRatio(1:5,1:5)
d1 = c()
d2 = c()
robustnessRatio = function(indics1,indics2){
for(i in indics1){
show(dataFilesQ1[i]);
d=discrepancyCriteria(data1[[i]],type=c('L2'))$DisL2;
if(is.na(d)){d=0}
d1 = append(d,d1);
#d1 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d1);
show(d1)
}
for(i in indics2){
show(dataFilesQ2[i])
d=discrepancyCriteria(data2[[i]],type=c('L2'))$DisL2;
if(is.na(d)){d=0}
d2 = append(d,d2)
#d2 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d2);
show(d2);
}
return(sum(w1[indics1,]*d1)/sum(w2[indics2,]*d2))
}
#Caluclation Total
r = robustnessRatio(1:5,1:5)
d1
d2
d1 = c()
d2 = c()
d1
robustnessRatio = function(indics1,indics2){
for(i in indics1){
show(dataFilesQ1[i]);
d=discrepancyCriteria(data1[[i]],type=c('L2'))$DisL2;
if(is.na(d)){d=0}
d1 = append(d,d1);
#d1 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d1);
show(d1)
}
for(i in indics2){
show(dataFilesQ2[i])
d=discrepancyCriteria(data2[[i]],type=c('L2'))$DisL2;
if(is.na(d)){d=0}
d2 = append(d,d2)
#d2 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d2);
show(d2);
}
return(sum(w1[indics1,]*d1)/sum(w2[indics2,]*d2))
}
robustnessRatio = function(indics1,indics2){
for(i in indics1){
show(dataFilesQ1[i]);
d=discrepancyCriteria(data1[[i]],type=c('L2'))$DisL2;
if(is.na(d)){d=0}
d1 = append(d,d1);
#d1 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d1);
show(d1)
}
for(i in indics2){
show(dataFilesQ2[i])
d=discrepancyCriteria(data2[[i]],type=c('L2'))$DisL2;
if(is.na(d)){d=0}
d2 = append(d,d2)
#d2 = append(discrepancyCriteria(matrix(rnorm(100),ncol=5),type=c('L2'))$DisL2,d2);
show(d2);
}
#return(sum(w1[indics1,]*d1)/sum(w2[indics2,]*d2))
return(data.frame(d1,d2))
}
r = robustnessRatio(1:5,1:5)
r
d1 = r$d1
d2 = r$d2
sum(w1[indics1,]*d1)/sum(w2[indics2,]*d2)
sum(w1[1:5,]*d1)/sum(w2[1:5,]*d2)
?discrepancyCriteria
sum(w1[1:5,]*(1-d1))/sum(w2[1:5,]*(1-d2))
ids1 <- read.table("ids1.csv",header=FALSE)
ids2 <- read.table("ids2.csv",header=FALSE)
ids1
ids2
distanceRefs = function(indics1,indics2){
#count same indics : 0, ≠ : 1
res = 0
for(id1 in ids1[indics1]){
for(id2 in ids2[indics2]){
if(id1!=id2){res=res+1}
}
}
return(res)
}
distanceRefs(1:5,1:5)
distanceRefs = function(indics1,indics2){
#count same indics : 0, ≠ : 1
res = 0
for(id1 in ids1$V1[indics1]){
for(id2 in ids2$V1[indics2]){
if(id1!=id2){res=res+1}
}
}
return(res)
}
distanceRefs(1:5,1:5)
ids1
ids2
distanceRefs = function(indics1,indics2){
#count same indics : 0, ≠ : 1
res = 0
for(id1 in ids1$V1[indics1]){
inids2 = FALSE
for(id2 in ids2$V1[indics2]){
if(id1==id2){inids2 = TRUE}
}
if(!inids2){res=res+1}
}
for(id2 in ids2$V1[indics2]){
inids1 = FALSE
for(id1 in ids1$V1[indics1]){
if(id1==id2){inids1 = TRUE}
}
if(!inids1){res=res+1}
}
return(res)
}
distanceRefs(1:5,1:5)
ids2
subsets=c(1:1,2:2,3:3,4:4,5:5)
subsets
subsets=list(1:1,2:2,3:3,4:4,5:5)
subsets
subsets=list(1:1,2:2,3:3,4:4,5:5,1:2,2:3,3:4,4:5)
subsets[[3]]
subsets[[7]]
subsets=list(1:1,2:2,3:3,4:4,5:5,
1:2,2:3,3:4,4:5,c(1,3),c(1,4),c(1,5),c(2,4),c(2,5),c(3,5),
1:3,2:4,3:5,c(1,3,4),c(1,4,5),c(2,4,5),
1:4,2:5,c(1,3,4,5),
1:5
)
for(l in subsets){show l}
for(l in subsets){show(l)}
subsets=list(1:1,2:2,3:3,4:4,5:5,
1:2,2:3,3:4,4:5,c(1,3),c(1,4),c(1,5),c(2,4),c(2,5),c(3,5),
1:3,2:4,3:5,c(1,3,4),c(1,4,5),c(2,4,5),
1:4,2:5,c(1,2,4,5),c(1,3,4,5),
1:5
)
ratio = function(indics1,indics2){
return(sum(w1[indics1,]*(1-d1[indics1]))/sum(w2[indics2,]*(1-d2[indics2])))
}
ratio(1:5,1:5)
ratio(1:4,1:4)
1:5==1:5
1:5&=1:5
1:5===1:5
1:5==1:5
*=
1:5&=&1:5
length(subsets)
distances=c();
ratios=c();
for(i in 1:length(subsets)){
for(j in 1:length(subsets)){
if(i!=j){distances = append(distanceRefs(subsets[[i]],subsets[[j]]),distances);
ratios = append(ratio(subsets[[i]],subsets[[j]]),ratio)
}
}
}
distances
ratios
d1
d1[1:2]
w1
ratio = function(indics1,indics2){
return(sum(w1$V1[indics1]*(1-d1[indics1]))/sum(w2$V1[indics2]*(1-d2[indics2])))
}
distances=c();
ratios=c();
for(i in 1:length(subsets)){
for(j in 1:length(subsets)){
if(i!=j){distances = append(distanceRefs(subsets[[i]],subsets[[j]]),distances);
ratios = append(ratio(subsets[[i]],subsets[[j]]),ratio)
}
}
}
#for each pair in subset, plot distance and R-ratio
distances=c();
ratios=c();
for(i in 1:length(subsets)){
for(j in 1:length(subsets)){
if(i!=j){distances = append(distanceRefs(subsets[[i]],subsets[[j]]),distances);
ratios = append(ratio(subsets[[i]],subsets[[j]]),ratios)
}
}
}
ratios
1-d1
1-d2
w1
w2
valuesQ1 = read.table("valuesQ1.csv",header=FALSE)
valuesQ2 = read.table("valuesQ2.csv",header=FALSE)
#weights, no subjective for now
w1 = valuesQ1 / sum(valuesQ1)
w2 = valuesQ2 / sum(valuesQ2)
w1
subsets=list(1:1,2:2,3:3,4:4,5:5,
1:2,2:3,3:4,4:5,c(1,3),c(1,4),c(1,5),c(2,4),c(2,5),c(3,5),
1:3,2:4,3:5,c(1,3,4),c(1,4,5),c(2,4,5),
1:4,2:5,c(1,2,4,5),c(1,3,4,5),
1:5
)
#for each pair in subset, plot distance and R-ratio
distances=c();
ratios=c();
for(i in 1:length(subsets)){
for(j in 1:length(subsets)){
if(i!=j){distances = append(distanceRefs(subsets[[i]],subsets[[j]]),distances);
ratios = append(ratio(subsets[[i]],subsets[[j]]),ratios)
}
}
}
plot(distances,ratios)
ratios
plot(distances,ratios,ylim=c(0,0.1))
plot(distances,ratios,ylim=c(0,1))
plot(distances,ratios,ylim=c(0,2))
plot(distances,ratios)
distanceRefs = function(indics1,indics2){
#count same indics : 0, ≠ : 1
res = 0
for(id1 in ids1$V1[indics1]){
inids2 = FALSE
for(id2 in ids2$V1[indics2]){
if(id1==id2){inids2 = TRUE}
}
if(!inids2){res=res+1}
}
for(id2 in ids2$V1[indics2]){
inids1 = FALSE
for(id1 in ids1$V1[indics1]){
if(id1==id2){inids1 = TRUE}
}
if(!inids1){res=res+1}
}
return(res/max(length(indics1),length(indics2)))
}
distanceRefs = function(indics1,indics2){
#count same indics : 0, ≠ : 1
res = 0
for(id1 in ids1$V1[indics1]){
inids2 = FALSE
for(id2 in ids2$V1[indics2]){
if(id1==id2){inids2 = TRUE}
}
if(!inids2){res=res+1}
}
for(id2 in ids2$V1[indics2]){
inids1 = FALSE
for(id1 in ids1$V1[indics1]){
if(id1==id2){inids1 = TRUE}
}
if(!inids1){res=res+1}
}
return(res/min(length(indics1),length(indics2)))
}
distances=c();
ratios=c();
for(i in 1:length(subsets)){
for(j in 1:length(subsets)){
if(i!=j){distances = append(distanceRefs(subsets[[i]],subsets[[j]]),distances);
ratios = append(ratio(subsets[[i]],subsets[[j]]),ratios)
}
}
}
plot(distances,ratios)
plot(distances,ratios,ylim=c(0,2))
